{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\WEB-2108\\\\Webbserverprogrammering_1\\\\assignment\\\\frontend\\\\frontend\\\\src\\\\components\\\\updateData\\\\UpdateData.jsx\",\n    _s = $RefreshSig$();\n\nimport UsersService from \"../../utils/api/service/UsersService\";\nimport { useState } from \"react\";\nimport Card from \"../card/Card\";\nimport css from './UpdateData.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateData = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [name, setName] = useState('');\n  const [newName, setNewName] = useState('');\n  const [task, setTask] = useState('');\n\n  const sendDataToApi = () => {\n    const changedData = {\n      'name': name,\n      'newName': newName,\n      'task': task\n    };\n    UsersService.updateDataByName(changedData).then(response => {\n      setData(response.data);\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.centerContent,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: css.h1Style,\n        \"data-testid\": \"header\",\n        children: \"Update Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.pStyle,\n        children: \"You can change both task and name individually but to change only task you have to type current name in both current name and assign new name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), \"Task: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.inputStyle,\n        type: \"text\",\n        value: task,\n        onChange: event => setTask(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }, this), \"Current name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.inputStyle,\n        type: \"text\",\n        value: name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 31\n      }, this), \"Assign new name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.inputStyle,\n        type: \"text\",\n        value: newName,\n        onChange: event => setNewName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: css.buttonStyle,\n        onClick: sendDataToApi,\n        children: \"Update Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), data.name ? /*#__PURE__*/_jsxDEV(Card, {\n        name: data.name,\n        task: data.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(UpdateData, \"I9O/P9qGbWSuljA/TECu6PVmOrc=\");\n\n_c = UpdateData;\nexport default UpdateData;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateData\");","map":{"version":3,"sources":["C:/git/WEB-2108/Webbserverprogrammering_1/assignment/frontend/frontend/src/components/updateData/UpdateData.jsx"],"names":["UsersService","useState","Card","css","UpdateData","data","setData","name","setName","newName","setNewName","task","setTask","sendDataToApi","changedData","updateDataByName","then","response","catch","error","console","log","centerContent","h1Style","pStyle","inputStyle","event","target","value","buttonStyle"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,sCAAzB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMY,aAAa,GAAG,MAAM;AACxB,UAAMC,WAAW,GAAG;AAChB,cAAQP,IADQ;AAEhB,iBAAWE,OAFK;AAGhB,cAAQE;AAHQ,KAApB;AAKAX,IAAAA,YAAY,CAACe,gBAAb,CAA8BD,WAA9B,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,OAAO,CAACW,QAAQ,CAACZ,IAAV,CAAP;AACH,KAHL,EAIKa,KAJL,CAIWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJpB;AAKH,GAXD;;AAaA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEhB,GAAG,CAACmB,aAApB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAEnB,GAAG,CAACoB,OAAnB;AAA4B,uBAAY,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAEpB,GAAG,CAACqB,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,yBAGU;AAAO,QAAA,SAAS,EAAErB,GAAG,CAACsB,UAAtB;AACO,QAAA,IAAI,EAAC,MADZ;AAEO,QAAA,KAAK,EAAEd,IAFd;AAGO,QAAA,QAAQ,EAAEe,KAAK,IAAId,OAAO,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd;AAHjC;AAAA;AAAA;AAAA;AAAA,cAHV,iCAOkB;AAAO,QAAA,SAAS,EAAEzB,GAAG,CAACsB,UAAtB;AACO,QAAA,IAAI,EAAC,MADZ;AAEO,QAAA,KAAK,EAAElB,IAFd;AAGO,QAAA,QAAQ,EAAEmB,KAAK,IAAIlB,OAAO,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAHjC;AAAA;AAAA;AAAA;AAAA,cAPlB,oCAWqB;AAAO,QAAA,SAAS,EAAEzB,GAAG,CAACsB,UAAtB;AACO,QAAA,IAAI,EAAC,MADZ;AAEO,QAAA,KAAK,EAAEhB,OAFd;AAGO,QAAA,QAAQ,EAAEiB,KAAK,IAAIhB,UAAU,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAHpC;AAAA;AAAA;AAAA;AAAA,cAXrB,eAeI;AAAQ,QAAA,SAAS,EAAEzB,GAAG,CAAC0B,WAAvB;AACQ,QAAA,OAAO,EAAEhB,aADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,EAmBKR,IAAI,CAACE,IAAL,gBAAY,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEF,IAAI,CAACE,IAAjB;AACM,QAAA,IAAI,EAAEF,IAAI,CAACM;AADjB;AAAA;AAAA;AAAA;AAAA,cAAZ,gBAEK;AAAA,kBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,cArBV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA2BH,CA9CD;;GAAMD,U;;KAAAA,U;AAgDN,eAAeA,UAAf","sourcesContent":["import UsersService from \"../../utils/api/service/UsersService\";\r\nimport {useState} from \"react\";\r\nimport Card from \"../card/Card\";\r\nimport css from './UpdateData.module.css'\r\n\r\nconst UpdateData = () => {\r\n    const [data, setData] = useState([])\r\n    const [name, setName] = useState('')\r\n    const [newName, setNewName] = useState('')\r\n    const [task, setTask] = useState('')\r\n\r\n    const sendDataToApi = () => {\r\n        const changedData = {\r\n            'name': name,\r\n            'newName': newName,\r\n            'task': task\r\n        }\r\n        UsersService.updateDataByName(changedData)\r\n            .then(response => {\r\n                setData(response.data)\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={css.centerContent}>\r\n                <h1 className={css.h1Style} data-testid='header'>Update Data</h1>\r\n                <p className={css.pStyle}>You can change both task and name individually but to change only task you have to type current name in both current name and assign new name</p>\r\n                Task: <input className={css.inputStyle}\r\n                             type=\"text\"\r\n                             value={task}\r\n                             onChange={event => setTask(event.target.value)}/>\r\n                Current name: <input className={css.inputStyle}\r\n                                     type=\"text\"\r\n                                     value={name}\r\n                                     onChange={event => setName(event.target.value)}/>\r\n                Assign new name: <input className={css.inputStyle}\r\n                                        type=\"text\"\r\n                                        value={newName}\r\n                                        onChange={event => setNewName(event.target.value)}/>\r\n                <button className={css.buttonStyle}\r\n                        onClick={sendDataToApi}>\r\n                    Update Data\r\n                </button>\r\n                {data.name ? <Card name={data.name}\r\n                                   task={data.task}/>\r\n                    : <h3>{data}</h3>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateData"]},"metadata":{},"sourceType":"module"}